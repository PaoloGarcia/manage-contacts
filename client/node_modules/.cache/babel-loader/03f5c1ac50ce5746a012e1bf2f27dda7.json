{"ast":null,"code":"import _slicedToArray from \"/Users/pgarcia/Desktop/manage-contacts/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pgarcia/Desktop/manage-contacts/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getContacts } from \"./actions\"; // components\n\nimport Navbar from \"./components/Layout/Navbar/Navbar\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport AddContact from \"./components/Contacts/AddContact/AddContact\";\nimport NotFound from \"./components//NotFound/NotFound\";\n\nfunction App(props) {\n  const _React$useState = React.useState([{\n    id: \"abc1\",\n    name: \"Paolo Garcia\",\n    email: \"paogar@gmail.com\",\n    phone: \"000-000-0000\"\n  }, {\n    id: \"abc2\",\n    name: \"John Doe\",\n    email: \"johdoe@gmail.com\",\n    phone: \"111-111-1111\"\n  }, {\n    id: \"abc3\",\n    name: \"Ann Olegovna\",\n    email: \"annole@gmail.com\",\n    phone: \"222-222-2222\"\n  }]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        contacts = _React$useState2[0],\n        setContacts = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        query = _React$useState4[0],\n        setQuery = _React$useState4[1]; // const { dispatch, contacts, } = props;\n  // React.useEffect(() => {\n  //     dispatch(getContacts());\n  // }, []);\n\n\n  const onChangeQueryHandler = e => setQuery(e.target.value);\n\n  const onDeleteContactHandler = id => {\n    const newContacts = contacts.filter(contact => contact.id !== id);\n    setContacts(newContacts);\n  };\n\n  const onAddContactHandler = contact => {\n    setContacts([contact, ...contacts]);\n  };\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    branding: \"Contacts Manager\",\n    query: query,\n    onChangeQueryHandler: onChangeQueryHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"main-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => {\n      return React.createElement(Contacts, {\n        contacts: contacts,\n        onDeleteContactHandler: onDeleteContactHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/add\",\n    render: props => {\n      return React.createElement(AddContact, {\n        onAddContactHandler: onAddContactHandler,\n        history: props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Route, {\n    component: NotFound,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts.contacts\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/pgarcia/Desktop/manage-contacts/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","connect","getContacts","Navbar","Contacts","AddContact","NotFound","App","props","useState","id","name","email","phone","contacts","setContacts","query","setQuery","onChangeQueryHandler","e","target","value","onDeleteContactHandler","newContacts","filter","contact","onAddContactHandler","history","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { getContacts } from \"./actions\";\n\n// components\nimport Navbar from \"./components/Layout/Navbar/Navbar\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport AddContact from \"./components/Contacts/AddContact/AddContact\";\nimport NotFound from \"./components//NotFound/NotFound\";\n\nfunction App(props) {\n    const [contacts, setContacts] = React.useState([\n        {\n            id: \"abc1\",\n            name: \"Paolo Garcia\",\n            email: \"paogar@gmail.com\",\n            phone: \"000-000-0000\"\n        },\n        {\n            id: \"abc2\",\n            name: \"John Doe\",\n            email: \"johdoe@gmail.com\",\n            phone: \"111-111-1111\"\n        },\n        {\n            id: \"abc3\",\n            name: \"Ann Olegovna\",\n            email: \"annole@gmail.com\",\n            phone: \"222-222-2222\"\n        },\n    ]);\n    const [query, setQuery] = React.useState(\"\");\n\n    // const { dispatch, contacts, } = props;\n\n    // React.useEffect(() => {\n    //     dispatch(getContacts());\n    // }, []);\n\n    const onChangeQueryHandler = e => setQuery(e.target.value);\n\n    const onDeleteContactHandler = id => {\n        const newContacts = contacts.filter(contact => contact.id !== id);\n        setContacts(newContacts);\n    }\n\n    const onAddContactHandler = contact => {\n        setContacts([contact, ...contacts]);\n    }\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <Navbar\n                    branding=\"Contacts Manager\"\n                    query={query}\n                    onChangeQueryHandler={onChangeQueryHandler}\n                />\n\n                <div className=\"main-box\">\n                    <Switch>\n                        <Route exact path=\"/\" render={() => {\n                            return <Contacts\n                                contacts={contacts}\n                                onDeleteContactHandler={onDeleteContactHandler}\n                            />;\n                        }} />\n                        <Route exact path=\"/add\" render={props => {\n                            return (\n                                <AddContact\n                                    onAddContactHandler={onAddContactHandler}\n                                    history={props.history}\n                                />\n                            );\n                        }} />\n                        <Route component={NotFound} />\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        contacts: state.contacts.contacts,\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}